GCC_PATH = /Applications/ARM/bin

ifdef DEBUG
	NO_ECHO :=
else
	NO_ECHO := @
endif

CC      = clang
LD      = $(GCC_PATH)/arm-none-eabi-ld
OCPY    = $(GCC_PATH)/arm-none-eabi-objcopy
ODUMP   = $(GCC_PATH)/arm-none-eabi-objdump
SZ      = $(GCC_PATH)/arm-none-eabi-size
MKDIR   = mkdir


CFLAGS +=   -nostdlib\
			-ffreestanding \
			--target=arm-none-eabi \
			-mtune=arm7tdmi \
			-mthumb\
			-ffunction-sections \
			-Os \

#-fdata-sections

LDFLAGS += -T cxd2680.ld #--just-symbols cxd2680v1.6.sym 
SRCS = firmware.c display.c button.c tetris.c main.c 
INCLUDES += ./

TARGET_VERSION=S16

CFLAGS += $(foreach i,$(INCLUDES),-I$(i)) -DFW_${TARGET_VERSION}=1
OBJS = $(patsubst %.c,build/objs/%.o,$(SRCS))
#CFLAGS += $(foreach d,$(DEFINES),-D$(d))

all: build/minitris.bin
	hexdump -v -e '"\\" "x" 1/1 "%02X"' build/minitris.bin > hex_builds/minitris_${TARGET_VERSION}.shex
	hexdump -v -e '1/1 "%02X"' build/minitris.bin > hex_builds/minitris_${TARGET_VERSION}.hex
	wc -c build/minitris.bin
	cp build/minitris.bin build/minitris_${TARGET_VERSION}.bin

build:
	mkdir -p build

build/objs:
	mkdir -p build/objs/

build/objs/%.o: %.c build/objs
	@echo "Compiling $<"
	mkdir -p $(dir $@)
	$(CC) -c -o $@ $< $(CFLAGS)

build/minitris.bin: build/minitris.elf build/minitris.lst
	$(OCPY) $< $@ -O binary
	$(SZ) $<

build/minitris.lst: build/minitris.elf build
	$(ODUMP) -D $< > $@

build/minitris.elf: $(OBJS)
	@echo "Linking $@"
	$(LD) $^ $(LDFLAGS) -o $@

clean:
	rm -rf build/objs build/minitris.*